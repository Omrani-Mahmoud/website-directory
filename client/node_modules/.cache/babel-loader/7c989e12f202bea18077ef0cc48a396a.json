{"ast":null,"code":"import _slicedToArray from \"D:\\\\My Stuff\\\\My Web Stuff\\\\React\\\\dicso\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:\\\\My Stuff\\\\My Web Stuff\\\\React\\\\dicso\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\My Stuff\\\\My Web Stuff\\\\React\\\\dicso\\\\client\\\\src\\\\App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"{\\n  elements{\\n    img\\n    text\\n    name\\n    rate\\n    link\\n  }\\n}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { Image, Input, Loader, Button, Icon } from 'semantic-ui-react';\nimport Element from './components/Element';\nimport Pop from './components/Popupp';\nimport ApolloClient, { gql } from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nconst getElements = gql(_templateObject());\nconst client = new ApolloClient({\n  uri: 'http://localhost:4004/graphql'\n});\n\nfunction App() {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  setInterval(() => {\n    setLoading(true);\n  }, 2000);\n\n  if (loading) {\n    return React.createElement(ApolloProvider, {\n      client: client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Pop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: \"../img/catalogue.png\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"nav_links\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"nav_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"div\", {\n      className: \"categoriesDrop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Categories\"), React.createElement(\"div\", {\n      className: \"dropdown-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"test\")))))), React.createElement(\"div\", {\n      className: \"menu_low_resolution\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"list ul\",\n      color: \"grey\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dropdown-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"test\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Input, {\n      icon: {\n        name: 'search',\n        circular: true,\n        link: true\n      },\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Element, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\My Stuff\\My Web Stuff\\React\\dicso\\client\\src\\App.js"],"names":["React","useState","Image","Input","Loader","Button","Icon","Element","Pop","ApolloClient","gql","ApolloProvider","getElements","client","uri","App","loading","setLoading","setInterval","name","circular","link"],"mappings":"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","sourcesContent":["import React ,{useState}from 'react';\nimport {Image,Input, Loader, Button, Icon} from 'semantic-ui-react';\nimport Element from './components/Element';\nimport Pop from './components/Popupp';\nimport ApolloClient,{gql} from 'apollo-boost';\nimport {ApolloProvider} from 'react-apollo';\n\n\n\nconst getElements = gql`{\n  elements{\n    img\n    text\n    name\n    rate\n    link\n  }\n}`;\n\nconst client = new ApolloClient({\n  uri:'http://localhost:4004/graphql'\n});\n\nfunction App() {\n\n  const [loading,setLoading]=useState(true);\n    setInterval(()=>{setLoading(true)},2000);\n  if(loading){\n    return (\n    <ApolloProvider client={client}>\n    <div className=\"app\">\n      <Pop/>\n        <div className=\"header\">\n              <div className='logo'>\n                <Image src='../img/catalogue.png' size='small'/>\n              </div>\n            \n                <nav>\n                  <ul className=\"nav_links\" >\n                    <div className=\"nav_content\">\n                    <li>Home</li>\n                    <div className=\"categoriesDrop\">\n                    <li>Categories</li>\n                    <div className=\"dropdown-content\">\n                      <a>test</a>\n                    </div>\n                    </div>\n                    </div>\n                  </ul>\n                </nav>\n                <div className=\"menu_low_resolution\">\n                    <Icon  name='list ul' color=\"grey\" size=\"large\"/>\n                    <div className=\"dropdown-content\">\n                      <a>test</a>\n                    </div>\n                    \n                </div>\n                <div>\n                <Input icon={{ name: 'search', circular: true, link: true }} placeholder='Search...' />\n                </div>\n                \n        </div>\n        \n        <div className=\"body\">\n            <Element />    \n        </div>\n        \n    </div>\n    </ApolloProvider>\n  );}\n\n} \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}