{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\My Stuff\\\\My Web Stuff\\\\React\\\\dicso\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\My Stuff\\\\My Web Stuff\\\\React\\\\dicso\\\\client\\\\src\\\\components\\\\element.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"{\\n  elements{\\n    img\\n    text\\n    name\\n    rate\\n    link\\n  }\\n}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Image, Popup, Rating, Button, Loader } from 'semantic-ui-react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\nconst getElements = gql(_templateObject());\n\nfunction element(props) {\n  console.log(props.data.elements);\n\n  const navigate = xx => {\n    window.open(xx);\n    console.log(xx);\n  };\n\n  let src = '../img/elements/';\n\n  if (props.data.loading) {\n    return React.createElement(Loader, {\n      active: true,\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"loading ... \");\n  } else console.log(props.data);\n\n  return React.createElement(\"div\", {\n    className: \"elements\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.data.elements.map(elem => {\n    return React.createElement(\"div\", {\n      id: \"element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      trigger: React.createElement(Image, {\n        src: src + elem.img,\n        size: \"tiny\",\n        className: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }),\n      on: \"click\",\n      hideOnScroll: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Popup.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, elem.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, elem.text), React.createElement(Rating, {\n      defaultRating: elem.rate,\n      maxRating: 5,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"btn_nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Button, {\n      circular: true,\n      size: \"mini\",\n      icon: \"linkify\",\n      onClick: () => navigate(elem.link),\n      color: \"facebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))))));\n  }));\n}\n\nexport default graphql(getElements)(element);","map":{"version":3,"sources":["D:\\My Stuff\\My Web Stuff\\React\\dicso\\client\\src\\components\\element.js"],"names":["React","Image","Popup","Rating","Button","Loader","gql","graphql","getElements","element","props","console","log","data","elements","navigate","xx","window","open","src","loading","map","elem","img","name","text","rate","link"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAqCC,MAArC,QAAkD,mBAAlD;AACA,SAAQC,GAAR,QAAkB,cAAlB;AACA,SAASC,OAAT,QAAuB,cAAvB;AAGA,MAAMC,WAAW,GAAGF,GAAH,mBAAjB;;AAYA,SAASG,OAAT,CAAiBC,KAAjB,EAAuB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAN,CAAWC,QAAvB;;AACA,QAAMC,QAAQ,GAAGC,EAAD,IAAM;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYF,EAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,EAAZ;AACH,GAHD;;AAMA,MAAIG,GAAG,GAAC,kBAAR;;AAIA,MAAGT,KAAK,CAACG,IAAN,CAAWO,OAAd,EAAsB;AAClB,WACI,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAEE,GAHN,MAKAT,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;;AACI,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,KAAK,CAACG,IAAN,CAAWC,QAAX,CAAoBO,GAApB,CAAwBC,IAAI,IAAG;AAC5B,WACD;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AACI,MAAA,OAAO,EAAE,oBAAC,KAAD;AAAQ,QAAA,GAAG,EAAEH,GAAG,GAAEG,IAAI,CAACC,GAAvB;AAA4B,QAAA,IAAI,EAAC,MAAjC;AAAwC,QAAA,SAAS,EAAC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADb;AAEI,MAAA,EAAE,EAAC,OAFP;AAGI,MAAA,YAAY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,IAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACG,IAAT,CAFJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,aAAa,EAAEH,IAAI,CAACI,IAA5B;AAAkC,MAAA,SAAS,EAAE,CAA7C;AAAgD,MAAA,QAAQ,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,IAAI,EAAC,MAAtB;AAA6B,MAAA,IAAI,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,MAAIX,QAAQ,CAACO,IAAI,CAACK,IAAN,CAAjE;AAA8E,MAAA,KAAK,EAAC,UAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,CAJJ,CADJ,CALJ,CADA,CADC;AAiBO,GAlBV,CADF,CADJ;AAwBP;;AAGD,eAAepB,OAAO,CAACC,WAAD,CAAP,CAAqBC,OAArB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {Image, Popup, Rating, Button,Loader} from 'semantic-ui-react';\r\nimport {gql} from 'apollo-boost';\r\nimport { graphql} from 'react-apollo';\r\n\r\n\r\nconst getElements = gql`{\r\n  elements{\r\n    img\r\n    text\r\n    name\r\n    rate\r\n    link\r\n  }\r\n}`;\r\n\r\n\r\n\r\nfunction element(props){\r\n    console.log(props.data.elements)\r\n    const navigate =(xx)=>{\r\n        window.open(xx);\r\n        console.log(xx)\r\n    };\r\n    \r\n    \r\n    let src='../img/elements/';\r\n\r\n   \r\n\r\n    if(props.data.loading){\r\n        return(\r\n            <Loader active inverted>loading ... </Loader>\r\n        )}\r\n    else\r\n    console.log(props.data)\r\n        return(\r\n            <div className=\"elements\">\r\n             {props.data.elements.map(elem =>{\r\n                 return(\r\n                <div id=\"element\">\r\n                <Popup\r\n                    trigger={<Image  src={src +elem.img} size=\"tiny\" className=\"img\"></Image>}\r\n                    on='click'\r\n                    hideOnScroll>\r\n                        \r\n                    <Popup.Content>\r\n                        <span>\r\n                            <h3>{elem.name}</h3>\r\n                            <p>{elem.text}</p>\r\n                            <Rating defaultRating={elem.rate} maxRating={5} disabled />\r\n                            <div className=\"btn_nav\"><Button circular size=\"mini\" icon=\"linkify\" onClick={()=>navigate(elem.link)} color=\"facebook\"/></div>\r\n                        </span>\r\n                    </Popup.Content>\r\n                    \r\n                </Popup>\r\n                </div>)})}\r\n            </div>\r\n          \r\n    )\r\n}\r\n\r\n\r\nexport default graphql(getElements)(element);"]},"metadata":{},"sourceType":"module"}